{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { load, login, logout, save } from \"./actions\";\n\n// Create slice\nconst slice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoading: false,\n    error: null,\n    user: null\n  },\n  reducers: {\n    // changeCartProductQty(state, action) {},\n  }\n  // extraReducers: {\n  //   // Login action\n  //   [login.pending]: (state) => {\n  //     state.isLoading = true;\n  //     state.error = null;\n  //   },\n  //   [login.fulfilled]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.user = action.payload.user;\n  //     alert(action.payload.message);\n  //   },\n  //   [login.rejected]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.error = action.payload.error;\n  //   },\n  //   // Logout action\n  //   [logout.pending]: (state) => {\n  //     state.isLoading = true;\n  //     state.error = null;\n  //   },\n  //   [logout.fulfilled]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.user = null;\n  //     alert(action.payload.message);\n  //   },\n  //   [logout.rejected]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.error = action.payload.error;\n  //   },\n  //   // Load current user\n  //   [load.pending]: (state) => {\n  //     state.isLoading = true;\n  //     state.error = null;\n  //   },\n  //   [load.fulfilled]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.user = action.payload.user;\n  //   },\n  //   [load.rejected]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.error = action.payload.error;\n  //   },\n  //   // Save user\n  //   [save.pending]: (state) => {\n  //     state.isLoading = true;\n  //     state.error = null;\n  //   },\n  //   [save.fulfilled]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.user = action.payload.user;\n  //   },\n  //   [save.rejected]: (state, action) => {\n  //     state.isLoading = false;\n  //     state.error = action.payload.error;\n  //   },\n  // },\n});\n\nexport const userActions = {\n  ...slice.actions,\n  login,\n  logout,\n  load,\n  save\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","load","login","logout","save","slice","name","initialState","isLoading","error","user","reducers","userActions","actions","reducer"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/store/user/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { load, login, logout, save } from \"./actions\";\r\n\r\n// Create slice\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    isLoading: false,\r\n    error: null,\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    // changeCartProductQty(state, action) {},\r\n  },\r\n  // extraReducers: {\r\n  //   // Login action\r\n  //   [login.pending]: (state) => {\r\n  //     state.isLoading = true;\r\n  //     state.error = null;\r\n  //   },\r\n  //   [login.fulfilled]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.user = action.payload.user;\r\n  //     alert(action.payload.message);\r\n  //   },\r\n  //   [login.rejected]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.error = action.payload.error;\r\n  //   },\r\n  //   // Logout action\r\n  //   [logout.pending]: (state) => {\r\n  //     state.isLoading = true;\r\n  //     state.error = null;\r\n  //   },\r\n  //   [logout.fulfilled]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.user = null;\r\n  //     alert(action.payload.message);\r\n  //   },\r\n  //   [logout.rejected]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.error = action.payload.error;\r\n  //   },\r\n  //   // Load current user\r\n  //   [load.pending]: (state) => {\r\n  //     state.isLoading = true;\r\n  //     state.error = null;\r\n  //   },\r\n  //   [load.fulfilled]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.user = action.payload.user;\r\n  //   },\r\n  //   [load.rejected]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.error = action.payload.error;\r\n  //   },\r\n  //   // Save user\r\n  //   [save.pending]: (state) => {\r\n  //     state.isLoading = true;\r\n  //     state.error = null;\r\n  //   },\r\n  //   [save.fulfilled]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.user = action.payload.user;\r\n  //   },\r\n  //   [save.rejected]: (state, action) => {\r\n  //     state.isLoading = false;\r\n  //     state.error = action.payload.error;\r\n  //   },\r\n  // },\r\n});\r\n\r\nexport const userActions = { ...slice.actions, login, logout, load, save };\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,WAAW;;AAErD;AACA,MAAMC,KAAK,GAAGL,WAAW,CAAC;EACxBM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACR;EAAA;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,WAAW,GAAG;EAAE,GAAGP,KAAK,CAACQ,OAAO;EAAEX,KAAK;EAAEC,MAAM;EAAEF,IAAI;EAAEG;AAAK,CAAC;AAC1E,eAAeC,KAAK,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}