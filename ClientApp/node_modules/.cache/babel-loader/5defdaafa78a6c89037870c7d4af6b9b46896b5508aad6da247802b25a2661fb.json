{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { init, login, logout } from \"./actions\";\n\n// Get, set, delete user id in localStorage\n// const key = \"key_uid\";\n// const loadUserId = () => JSON.parse(localStorage.getItem(key));\n// const saveUserId = (id) => localStorage.setItem(key, JSON.stringify(id));\n// const deleteUserId = () => localStorage.removeItem(key);\n\n// Get userId from localStorage\n// const userId = loadUserId();\n\n// Create slice\nconst slice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoading: false,\n    error: null,\n    user: null,\n    userId: null\n    // userId: userId,\n  },\n\n  reducers: {},\n  extraReducers: builder => builder\n  // Login action\n  .addCase(login.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(login.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.userId = action.payload.userId;\n    // saveUserId(action.payload.userId);\n    alert(action.payload.message);\n  }).addCase(login.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload.error;\n  })\n  // Logout action\n  .addCase(logout.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(logout.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.userId = null;\n    // deleteUserId();\n    alert(action.payload.message);\n  }).addCase(logout.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload.error;\n  })\n  // Init state\n  .addCase(init.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(init.fulfilled, (state, action) => {\n    state.isLoading = false;\n    console.log(action);\n    state.userId = action.payload.userId;\n  }).addCase(init.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload.error;\n  })\n});\nexport const authActions = {\n  ...slice.actions,\n  login,\n  logout,\n  init\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","init","login","logout","slice","name","initialState","isLoading","error","user","userId","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","alert","message","rejected","console","log","authActions","actions","reducer"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/store/auth/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { init, login, logout } from \"./actions\";\r\n\r\n// Get, set, delete user id in localStorage\r\n// const key = \"key_uid\";\r\n// const loadUserId = () => JSON.parse(localStorage.getItem(key));\r\n// const saveUserId = (id) => localStorage.setItem(key, JSON.stringify(id));\r\n// const deleteUserId = () => localStorage.removeItem(key);\r\n\r\n// Get userId from localStorage\r\n// const userId = loadUserId();\r\n\r\n// Create slice\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoading: false,\r\n    error: null,\r\n    user: null,\r\n    userId: null,\r\n    // userId: userId,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) =>\r\n    builder\r\n      // Login action\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.userId = action.payload.userId;\r\n        // saveUserId(action.payload.userId);\r\n        alert(action.payload.message);\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload.error;\r\n      })\r\n      // Logout action\r\n      .addCase(logout.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.userId = null;\r\n        // deleteUserId();\r\n        alert(action.payload.message);\r\n      })\r\n      .addCase(logout.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload.error;\r\n      })\r\n      // Init state\r\n      .addCase(init.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(init.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        console.log(action);\r\n        state.userId = action.payload.userId;\r\n      })\r\n      .addCase(init.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload.error;\r\n      }),\r\n});\r\n\r\nexport const authActions = { ...slice.actions, login, logout, init };\r\nexport default slice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}