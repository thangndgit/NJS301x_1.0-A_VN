{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\NJS301x_1.0-A_VN\\\\ClientApp\\\\src\\\\components\\\\pages\\\\login\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"../../UI/Button\";\nimport { authActions } from \"../../../store/reducers/auth\";\nimport { cartActions } from \"../../../store/reducers/cart\";\nimport \"./LoginForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  // Pages history\n  const history = useHistory();\n\n  // Dispatch function\n  const dispatch = useDispatch();\n\n  // User accounts\n  const USERS_KEY = \"users_key\";\n  const CURRENT_USER_KEY = \"current_user_key\";\n  const usersArr = JSON.parse(localStorage.getItem(USERS_KEY)) || [];\n\n  // Input reference\n  const emailRef = useRef();\n  const passRef = useRef();\n\n  // Validate data\n  const validate = user => {\n    // If email input is blank\n    if (user.email === \"\") {\n      alert(\"You must enter the email to login!\");\n      return false;\n    }\n\n    // If password input is blank\n    if (user.password === \"\") {\n      alert(\"You must enter the password to login!\");\n      return false;\n    }\n\n    // If account does not exist\n    if (usersArr.filter(acc => acc.email === user.email).length === 0) {\n      alert(\"Account does not exist!\");\n      return false;\n    }\n\n    // If password is wrong\n    if (usersArr.filter(acc => acc.password === user.password).length === 0) {\n      alert(\"Password is wrong!\");\n      return false;\n    }\n\n    // If all info is valid\n    return true;\n  };\n\n  // Handler when submit login form\n  const loginHandler = e => {\n    e.preventDefault();\n\n    // Get input data\n    const user = {\n      email: emailRef.current.value.trim(),\n      password: passRef.current.value\n    };\n\n    // Validate data\n    if (validate(user)) {\n      // Current user\n      const currentUser = usersArr.find(acc => acc.email === user.email);\n      // Save current user\n      localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));\n      dispatch(authActions.login());\n      // Reset cart\n      dispatch(cartActions.reset());\n      // Alert\n      alert(\"Logged in successfully!\");\n      history.push(\"/\");\n    } else passRef.current.value = \"\";\n  };\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form\",\n    onSubmit: loginHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-group-text\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        ref: emailRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group last\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-group-text\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        ref: passRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"SIGN IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"6krsh8xSQzwDqth21tGJ6EH2iWY=\", false, function () {\n  return [useHistory, useDispatch];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useRef","useDispatch","useHistory","Button","authActions","cartActions","LoginForm","history","dispatch","USERS_KEY","CURRENT_USER_KEY","usersArr","JSON","parse","localStorage","getItem","emailRef","passRef","validate","user","email","alert","password","filter","acc","length","loginHandler","e","preventDefault","current","value","trim","currentUser","find","setItem","stringify","login","reset","push"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/components/pages/login/LoginForm.js"],"sourcesContent":["import { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from \"../../UI/Button\";\r\nimport { authActions } from \"../../../store/reducers/auth\";\r\nimport { cartActions } from \"../../../store/reducers/cart\";\r\nimport \"./LoginForm.css\";\r\n\r\nconst LoginForm = () => {\r\n  // Pages history\r\n  const history = useHistory();\r\n\r\n  // Dispatch function\r\n  const dispatch = useDispatch();\r\n\r\n  // User accounts\r\n  const USERS_KEY = \"users_key\";\r\n  const CURRENT_USER_KEY = \"current_user_key\";\r\n  const usersArr = JSON.parse(localStorage.getItem(USERS_KEY)) || [];\r\n\r\n  // Input reference\r\n  const emailRef = useRef();\r\n  const passRef = useRef();\r\n\r\n  // Validate data\r\n  const validate = (user) => {\r\n    // If email input is blank\r\n    if (user.email === \"\") {\r\n      alert(\"You must enter the email to login!\");\r\n      return false;\r\n    }\r\n\r\n    // If password input is blank\r\n    if (user.password === \"\") {\r\n      alert(\"You must enter the password to login!\");\r\n      return false;\r\n    }\r\n\r\n    // If account does not exist\r\n    if (usersArr.filter((acc) => acc.email === user.email).length === 0) {\r\n      alert(\"Account does not exist!\");\r\n      return false;\r\n    }\r\n\r\n    // If password is wrong\r\n    if (usersArr.filter((acc) => acc.password === user.password).length === 0) {\r\n      alert(\"Password is wrong!\");\r\n      return false;\r\n    }\r\n\r\n    // If all info is valid\r\n    return true;\r\n  };\r\n\r\n  // Handler when submit login form\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get input data\r\n    const user = {\r\n      email: emailRef.current.value.trim(),\r\n      password: passRef.current.value,\r\n    };\r\n\r\n    // Validate data\r\n    if (validate(user)) {\r\n      // Current user\r\n      const currentUser = usersArr.find((acc) => acc.email === user.email);\r\n      // Save current user\r\n      localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));\r\n      dispatch(authActions.login());\r\n      // Reset cart\r\n      dispatch(cartActions.reset());\r\n      // Alert\r\n      alert(\"Logged in successfully!\");\r\n      history.push(\"/\");\r\n    } else passRef.current.value = \"\";\r\n  };\r\n\r\n  // Render component\r\n  return (\r\n    <form className=\"login-form\" onSubmit={loginHandler}>\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text\">Email</label>\r\n        <input type=\"email\" className=\"form-control\" ref={emailRef} />\r\n      </div>\r\n      <div className=\"input-group last\">\r\n        <label className=\"input-group-text\">Password</label>\r\n        <input type=\"password\" className=\"form-control\" ref={passRef} />\r\n      </div>\r\n      <Button>SIGN IN</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}