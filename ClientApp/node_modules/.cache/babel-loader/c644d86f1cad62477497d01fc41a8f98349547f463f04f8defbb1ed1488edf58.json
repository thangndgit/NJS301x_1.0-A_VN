{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI PC\\\\OneDrive\\\\Ta\\u0300i li\\xEA\\u0323u\\\\GitHub\\\\NJS301x_1.0-A_VN\\\\ClientApp\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport API from \"../../constants/api\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport \"./register.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  // Login state\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n\n  // Create input refs\n  const usernameRef = useRef(\"\");\n  const password1Ref = useRef(\"\");\n  const password2Ref = useRef(\"\");\n  const nameRef = useRef(\"\");\n  const phoneRef = useRef(\"\");\n  const emailRef = useRef(\"\");\n\n  // Navigate function\n  const navigate = useNavigate();\n\n  // Validate function\n  const validate = data => {\n    // If some data field is blank\n    if (data.username === \"\" || data.password1 === \"\" || data.password2 === \"\" || data.name === \"\" || data.phone === \"\" || data.mail === \"\") {\n      alert(\"Missing register info. Try again!\");\n      return false;\n    }\n\n    // If re-type password does not match\n    if (data.password1 !== data.password2) {\n      alert(\"Re-type password does not match. Try again!\");\n      return false;\n    }\n\n    // If every is ok\n    return true;\n  };\n\n  // Handle when submit login form\n  const handleSubmitRegister = event => {\n    // Prevent page reload when submit form\n    event.preventDefault();\n\n    // Create request payload\n    const data = {\n      username: usernameRef.current.value.trim(),\n      password1: password1Ref.current.value.trim(),\n      password2: password2Ref.current.value.trim(),\n      name: nameRef.current.value.trim(),\n      phone: phoneRef.current.value.trim(),\n      email: emailRef.current.value.trim()\n    };\n\n    // If input is fine\n    if (validate(data)) {\n      // Post login request\n      fetch(API.POST_REGISTER, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => {\n        // Alert register state to user\n        alert(data.message);\n        // If register success, redirect to login page\n        if (data.type === \"Success\") navigate(\"/login\");\n      }).catch(err => console.log(err));\n    }\n  };\n  return !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registerForm\",\n        onSubmit: handleSubmitRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"registerForm__title\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          ref: usernameRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter password\",\n          ref: password1Ref,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Retype password\",\n          ref: password2Ref,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your full name\",\n          ref: nameRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your phone number\",\n          ref: phoneRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          ref: emailRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n_s(Register, \"yFeAmF6spKBMrcOOWbxjz6jc4bM=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useContext","useRef","useNavigate","Navbar","API","AuthContext","Register","isLoggedIn","usernameRef","password1Ref","password2Ref","nameRef","phoneRef","emailRef","navigate","validate","data","username","password1","password2","name","phone","mail","alert","handleSubmitRegister","event","preventDefault","current","value","trim","email","fetch","POST_REGISTER","method","credentials","headers","body","JSON","stringify","then","res","json","message","type","catch","err","console","log"],"sources":["C:/Users/MSI PC/OneDrive/Tài liệu/GitHub/NJS301x_1.0-A_VN/ClientApp/src/pages/register/Register.jsx"],"sourcesContent":["import { useContext, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport API from \"../../constants/api\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport \"./register.css\";\r\n\r\nconst Register = () => {\r\n  // Login state\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  // Create input refs\r\n  const usernameRef = useRef(\"\");\r\n  const password1Ref = useRef(\"\");\r\n  const password2Ref = useRef(\"\");\r\n  const nameRef = useRef(\"\");\r\n  const phoneRef = useRef(\"\");\r\n  const emailRef = useRef(\"\");\r\n\r\n  // Navigate function\r\n  const navigate = useNavigate();\r\n\r\n  // Validate function\r\n  const validate = (data) => {\r\n    // If some data field is blank\r\n    if (\r\n      data.username === \"\" ||\r\n      data.password1 === \"\" ||\r\n      data.password2 === \"\" ||\r\n      data.name === \"\" ||\r\n      data.phone === \"\" ||\r\n      data.mail === \"\"\r\n    ) {\r\n      alert(\"Missing register info. Try again!\");\r\n      return false;\r\n    }\r\n\r\n    // If re-type password does not match\r\n    if (data.password1 !== data.password2) {\r\n      alert(\"Re-type password does not match. Try again!\");\r\n      return false;\r\n    }\r\n\r\n    // If every is ok\r\n    return true;\r\n  };\r\n\r\n  // Handle when submit login form\r\n  const handleSubmitRegister = (event) => {\r\n    // Prevent page reload when submit form\r\n    event.preventDefault();\r\n\r\n    // Create request payload\r\n    const data = {\r\n      username: usernameRef.current.value.trim(),\r\n      password1: password1Ref.current.value.trim(),\r\n      password2: password2Ref.current.value.trim(),\r\n      name: nameRef.current.value.trim(),\r\n      phone: phoneRef.current.value.trim(),\r\n      email: emailRef.current.value.trim(),\r\n    };\r\n\r\n    // If input is fine\r\n    if (validate(data)) {\r\n      // Post login request\r\n      fetch(API.POST_REGISTER, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          // Alert register state to user\r\n          alert(data.message);\r\n          // If register success, redirect to login page\r\n          if (data.type === \"Success\") navigate(\"/login\");\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    !isLoggedIn && (\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"registerContainer\">\r\n          <form className=\"registerForm\" onSubmit={handleSubmitRegister}>\r\n            <h1 className=\"registerForm__title\">Register</h1>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter username\"\r\n              ref={usernameRef}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              ref={password1Ref}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Retype password\"\r\n              ref={password2Ref}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your full name\"\r\n              ref={nameRef}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your phone number\"\r\n              ref={phoneRef}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              ref={emailRef}\r\n              required\r\n            />\r\n            <button type=\"submit\">Register</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}