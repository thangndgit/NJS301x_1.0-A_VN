{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { login, logout } from \"./actions\";\n\n// Get, set, delete user id in localStorage\nconst key = \"key_uid\";\nconst loadUserId = () => JSON.parse(localStorage.getItem(key));\nconst saveUserId = id => localStorage.setItem(key, JSON.stringify(id));\nconst deleteUserId = () => localStorage.removeItem(key);\n\n// Get userId from localStorage\nconst userId = loadUserId();\n\n// Create slice\nconst slice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoading: false,\n    error: null,\n    userId: userId\n  },\n  reducers: {},\n  extraReducers: builder => builder\n  // Login action\n  .addCase(login.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(login.fulfilled, (state, action) => {\n    state.isLoading = false;\n    state.userId = action.payload.userId;\n    saveUserId(action.payload.userId);\n    alert(action.payload.message);\n  }).addCase(login.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload.error;\n  })\n  // Logout action\n  .addCase(logout.pending, state => {\n    state.isLoading = true;\n    state.error = null;\n  }).addCase(logout.fulfilled, state => {\n    state.isLoading = false;\n    state.userId = null;\n    deleteUserId();\n    alert(action.payload.message);\n  }).addCase(logout.rejected, (state, action) => {\n    state.isLoading = false;\n    state.error = action.payload.error;\n  })\n});\nexport const authActions = {\n  ...slice.actions,\n  login,\n  logout\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","login","logout","key","loadUserId","JSON","parse","localStorage","getItem","saveUserId","id","setItem","stringify","deleteUserId","removeItem","userId","slice","name","initialState","isLoading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","alert","message","rejected","authActions","actions","reducer"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/store/auth/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login, logout } from \"./actions\";\r\n\r\n// Get, set, delete user id in localStorage\r\nconst key = \"key_uid\";\r\nconst loadUserId = () => JSON.parse(localStorage.getItem(key));\r\nconst saveUserId = (id) => localStorage.setItem(key, JSON.stringify(id));\r\nconst deleteUserId = () => localStorage.removeItem(key);\r\n\r\n// Get userId from localStorage\r\nconst userId = loadUserId();\r\n\r\n// Create slice\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoading: false,\r\n    error: null,\r\n    userId: userId,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) =>\r\n    builder\r\n      // Login action\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.userId = action.payload.userId;\r\n        saveUserId(action.payload.userId);\r\n        alert(action.payload.message);\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload.error;\r\n      })\r\n      // Logout action\r\n      .addCase(logout.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        state.userId = null;\r\n        deleteUserId();\r\n        alert(action.payload.message);\r\n      })\r\n      .addCase(logout.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.error = action.payload.error;\r\n      }),\r\n});\r\n\r\nexport const authActions = { ...slice.actions, login, logout };\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,EAAEC,MAAM,QAAQ,WAAW;;AAEzC;AACA,MAAMC,GAAG,GAAG,SAAS;AACrB,MAAMC,UAAU,GAAG,MAAMC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC,CAAC;AAC9D,MAAMM,UAAU,GAAIC,EAAE,IAAKH,YAAY,CAACI,OAAO,CAACR,GAAG,EAAEE,IAAI,CAACO,SAAS,CAACF,EAAE,CAAC,CAAC;AACxE,MAAMG,YAAY,GAAG,MAAMN,YAAY,CAACO,UAAU,CAACX,GAAG,CAAC;;AAEvD;AACA,MAAMY,MAAM,GAAGX,UAAU,EAAE;;AAE3B;AACA,MAAMY,KAAK,GAAGhB,WAAW,CAAC;EACxBiB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE,IAAI;IACXL,MAAM,EAAEA;EACV,CAAC;EACDM,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IACrBA;EACE;EAAA,CACCC,OAAO,CAACvB,KAAK,CAACwB,OAAO,EAAGC,KAAK,IAAK;IACjCA,KAAK,CAACP,SAAS,GAAG,IAAI;IACtBO,KAAK,CAACN,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CACDI,OAAO,CAACvB,KAAK,CAAC0B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;IAC3CF,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACX,MAAM,GAAGa,MAAM,CAACC,OAAO,CAACd,MAAM;IACpCN,UAAU,CAACmB,MAAM,CAACC,OAAO,CAACd,MAAM,CAAC;IACjCe,KAAK,CAACF,MAAM,CAACC,OAAO,CAACE,OAAO,CAAC;EAC/B,CAAC,CAAC,CACDP,OAAO,CAACvB,KAAK,CAAC+B,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;IAC1CF,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;EACpC,CAAC;EACD;EAAA,CACCI,OAAO,CAACtB,MAAM,CAACuB,OAAO,EAAGC,KAAK,IAAK;IAClCA,KAAK,CAACP,SAAS,GAAG,IAAI;IACtBO,KAAK,CAACN,KAAK,GAAG,IAAI;EACpB,CAAC,CAAC,CACDI,OAAO,CAACtB,MAAM,CAACyB,SAAS,EAAGD,KAAK,IAAK;IACpCA,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACX,MAAM,GAAG,IAAI;IACnBF,YAAY,EAAE;IACdiB,KAAK,CAACF,MAAM,CAACC,OAAO,CAACE,OAAO,CAAC;EAC/B,CAAC,CAAC,CACDP,OAAO,CAACtB,MAAM,CAAC8B,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;IAC3CF,KAAK,CAACP,SAAS,GAAG,KAAK;IACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;EACpC,CAAC;AACP,CAAC,CAAC;AAEF,OAAO,MAAMa,WAAW,GAAG;EAAE,GAAGjB,KAAK,CAACkB,OAAO;EAAEjC,KAAK;EAAEC;AAAO,CAAC;AAC9D,eAAec,KAAK,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}