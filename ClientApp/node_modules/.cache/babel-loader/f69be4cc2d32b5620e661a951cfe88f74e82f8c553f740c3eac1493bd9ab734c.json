{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\nlet initialState;\n\n// Get session\napi.session.get()\n// Process data\n.then(res => initialState = res.data.item)\n// Catch error\n.catch(err => alert(err.response.data.message));\nconst slice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login(state, user) {\n      // Create session\n      api.session.create(user)\n      // Process data\n      .then(res => {\n        alert(res.data.message);\n        state.isLoggedIn = true;\n        state.user = res.data.user;\n      })\n      // Catch error\n      .catch(err => alert(err.response.data.message));\n    },\n    logout(state) {\n      // Delete session\n      api.session.delete\n      // Process data\n      .then(res => {\n        alert(res.data.message);\n        state.isLoggedIn = false;\n        state.user = null;\n      })\n      // Catch error\n      .catch(err => alert(err.response.data.message));\n    }\n  }\n});\nexport const authActions = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","api","initialState","session","get","then","res","data","item","catch","err","alert","response","message","slice","name","reducers","login","state","user","create","isLoggedIn","logout","delete","authActions","actions","reducer"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/store/reducers/auth.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api/api\";\r\n\r\nlet initialState;\r\n\r\n// Get session\r\napi.session\r\n  .get()\r\n  // Process data\r\n  .then((res) => (initialState = res.data.item))\r\n  // Catch error\r\n  .catch((err) => alert(err.response.data.message));\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    login(state, user) {\r\n      // Create session\r\n      api.session\r\n        .create(user)\r\n        // Process data\r\n        .then((res) => {\r\n          alert(res.data.message);\r\n          state.isLoggedIn = true;\r\n          state.user = res.data.user;\r\n        })\r\n        // Catch error\r\n        .catch((err) => alert(err.response.data.message));\r\n    },\r\n    logout(state) {\r\n      // Delete session\r\n      api.session.delete\r\n        // Process data\r\n        .then((res) => {\r\n          alert(res.data.message);\r\n          state.isLoggedIn = false;\r\n          state.user = null;\r\n        })\r\n        // Catch error\r\n        .catch((err) => alert(err.response.data.message));\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = slice.actions;\r\nexport default slice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,eAAe;AAE/B,IAAIC,YAAY;;AAEhB;AACAD,GAAG,CAACE,OAAO,CACRC,GAAG;AACJ;AAAA,CACCC,IAAI,CAAEC,GAAG,IAAMJ,YAAY,GAAGI,GAAG,CAACC,IAAI,CAACC,IAAK;AAC7C;AAAA,CACCC,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC;AAEnD,MAAMC,KAAK,GAAGd,WAAW,CAAC;EACxBe,IAAI,EAAE,MAAM;EACZb,YAAY,EAAEA,YAAY;EAC1Bc,QAAQ,EAAE;IACRC,KAAK,CAACC,KAAK,EAAEC,IAAI,EAAE;MACjB;MACAlB,GAAG,CAACE,OAAO,CACRiB,MAAM,CAACD,IAAI;MACZ;MAAA,CACCd,IAAI,CAAEC,GAAG,IAAK;QACbK,KAAK,CAACL,GAAG,CAACC,IAAI,CAACM,OAAO,CAAC;QACvBK,KAAK,CAACG,UAAU,GAAG,IAAI;QACvBH,KAAK,CAACC,IAAI,GAAGb,GAAG,CAACC,IAAI,CAACY,IAAI;MAC5B,CAAC;MACD;MAAA,CACCV,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC;IACrD,CAAC;IACDS,MAAM,CAACJ,KAAK,EAAE;MACZ;MACAjB,GAAG,CAACE,OAAO,CAACoB;MACV;MAAA,CACClB,IAAI,CAAEC,GAAG,IAAK;QACbK,KAAK,CAACL,GAAG,CAACC,IAAI,CAACM,OAAO,CAAC;QACvBK,KAAK,CAACG,UAAU,GAAG,KAAK;QACxBH,KAAK,CAACC,IAAI,GAAG,IAAI;MACnB,CAAC;MACD;MAAA,CACCV,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACL,IAAI,CAACM,OAAO,CAAC,CAAC;IACrD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,WAAW,GAAGV,KAAK,CAACW,OAAO;AACxC,eAAeX,KAAK,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}