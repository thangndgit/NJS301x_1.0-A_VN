{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:5000\",\n  withCredentials: true\n});\nconst api = {};\napi.session = {\n  create: function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return instance.post(\"/api/sessions\", data);\n  },\n  get: () => instance.get(\"/api/sessions\"),\n  delete: () => instance.delete(\"/api/sessions\")\n};\napi.user = {\n  create: function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return instance.post(\"/api/users\", data);\n  },\n  getById: function () {\n    let userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return instance.get(\"/api/users/\" + userId);\n  },\n  updateById: function () {\n    let userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return instance.put(\"/api/users/\" + userId, data);\n  },\n  deleteById: function () {\n    let userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return instance.delete(\"/api/users/\" + userId);\n  }\n};\napi.order = {\n  create: function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return instance.post(\"/api/orders\", data);\n  },\n  getAll: function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return instance.get(\"/api/orders\", {\n      params\n    });\n  },\n  getById: function () {\n    let orderId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return instance.get(\"/api/orders/\" + orderId);\n  },\n  updateById: function () {\n    let orderId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return instance.put(\"/api/orders/\" + orderId, data);\n  },\n  deleteById: function () {\n    let orderId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return instance.delete(\"/api/orders/\" + orderId);\n  }\n};\napi.product = {\n  create: function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return instance.post(\"/api/products\", data);\n  },\n  getAll: function () {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return instance.get(\"/api/products?\", {\n      params\n    });\n  },\n  getById: function () {\n    let productId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return instance.get(\"/api/products/\" + productId);\n  },\n  updateById: function () {\n    let productId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return instance.put(\"/api/products/\" + productId, data);\n  },\n  deleteById: function () {\n    let productId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return instance.delete(\"/api/products/\" + productId);\n  }\n};\nexport const call = function (api) {\n  let apply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : data => {};\n  return api.then(res => apply(res.data)).catch(err => alert(err.response.data.message));\n};\nexport default api;","map":{"version":3,"names":["axios","instance","create","baseURL","withCredentials","api","session","data","post","get","delete","user","getById","userId","updateById","put","deleteById","order","getAll","params","orderId","product","productId","call","apply","then","res","catch","err","alert","response","message"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  withCredentials: true,\r\n});\r\n\r\nconst api = {};\r\n\r\napi.session = {\r\n  create: (data = {}) => instance.post(\"/api/sessions\", data),\r\n  get: () => instance.get(\"/api/sessions\"),\r\n  delete: () => instance.delete(\"/api/sessions\"),\r\n};\r\n\r\napi.user = {\r\n  create: (data = {}) => instance.post(\"/api/users\", data),\r\n  getById: (userId = \"\") => instance.get(\"/api/users/\" + userId),\r\n  updateById: (userId = \"\", data = {}) => instance.put(\"/api/users/\" + userId, data),\r\n  deleteById: (userId = \"\") => instance.delete(\"/api/users/\" + userId),\r\n};\r\n\r\napi.order = {\r\n  create: (data = {}) => instance.post(\"/api/orders\", data),\r\n  getAll: (params = {}) => instance.get(\"/api/orders\", { params }),\r\n  getById: (orderId = \"\") => instance.get(\"/api/orders/\" + orderId),\r\n  updateById: (orderId = \"\", data = {}) => instance.put(\"/api/orders/\" + orderId, data),\r\n  deleteById: (orderId = \"\") => instance.delete(\"/api/orders/\" + orderId),\r\n};\r\n\r\napi.product = {\r\n  create: (data = {}) => instance.post(\"/api/products\", data),\r\n  getAll: (params = {}) => instance.get(\"/api/products?\", { params }),\r\n  getById: (productId = \"\") => instance.get(\"/api/products/\" + productId),\r\n  updateById: (productId = \"\", data = {}) => instance.put(\"/api/products/\" + productId, data),\r\n  deleteById: (productId = \"\") => instance.delete(\"/api/products/\" + productId),\r\n};\r\n\r\nexport const call = (api, apply = (data) => {}) =>\r\n  api.then((res) => apply(res.data)).catch((err) => alert(err.response.data.message));\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}