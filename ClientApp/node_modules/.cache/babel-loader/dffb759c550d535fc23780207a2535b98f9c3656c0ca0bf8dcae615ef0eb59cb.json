{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\n\n// Login action\nexport const login = createAsyncThunk(\"user/login\", async account => {\n  try {\n    const response = await api.session.create(account);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\n\n// Logout action\nexport const logout = createAsyncThunk(\"user/logout\", async () => {\n  const response = await api.session.delete();\n  return response.data;\n});\n\n// Load current user;\nexport const load = createAsyncThunk(\"user/load\", async () => {\n  const response = await api.session.get();\n  return response.data;\n});\n\n// Save current user;\nexport const save = createAsyncThunk(\"user/save\", async (arg, _ref) => {\n  let {\n    getState\n  } = _ref;\n  const user = getState().user.user;\n  const response = await api.user.updateById(user._id, user);\n  return response.data;\n});","map":{"version":3,"names":["createAsyncThunk","api","login","account","response","session","create","data","error","console","log","logout","delete","load","get","save","arg","getState","user","updateById","_id"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/store/user/actions.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api/api\";\r\n\r\n// Login action\r\nexport const login = createAsyncThunk(\"user/login\", async (account) => {\r\n  try {\r\n    const response = await api.session.create(account);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\n// Logout action\r\nexport const logout = createAsyncThunk(\"user/logout\", async () => {\r\n  const response = await api.session.delete();\r\n  return response.data;\r\n});\r\n\r\n// Load current user;\r\nexport const load = createAsyncThunk(\"user/load\", async () => {\r\n  const response = await api.session.get();\r\n  return response.data;\r\n});\r\n\r\n// Save current user;\r\nexport const save = createAsyncThunk(\"user/save\", async (arg, { getState }) => {\r\n  const user = getState().user.user;\r\n  const response = await api.user.updateById(user._id, user);\r\n  return response.data;\r\n});\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,GAAG,MAAM,eAAe;;AAE/B;AACA,OAAO,MAAMC,KAAK,GAAGF,gBAAgB,CAAC,YAAY,EAAE,MAAOG,OAAO,IAAK;EACrE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,OAAO,CAACC,MAAM,CAACH,OAAO,CAAC;IAClD,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMG,MAAM,GAAGX,gBAAgB,CAAC,aAAa,EAAE,YAAY;EAChE,MAAMI,QAAQ,GAAG,MAAMH,GAAG,CAACI,OAAO,CAACO,MAAM,EAAE;EAC3C,OAAOR,QAAQ,CAACG,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,IAAI,GAAGb,gBAAgB,CAAC,WAAW,EAAE,YAAY;EAC5D,MAAMI,QAAQ,GAAG,MAAMH,GAAG,CAACI,OAAO,CAACS,GAAG,EAAE;EACxC,OAAOV,QAAQ,CAACG,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMQ,IAAI,GAAGf,gBAAgB,CAAC,WAAW,EAAE,OAAOgB,GAAG,WAAmB;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACxE,MAAMC,IAAI,GAAGD,QAAQ,EAAE,CAACC,IAAI,CAACA,IAAI;EACjC,MAAMd,QAAQ,GAAG,MAAMH,GAAG,CAACiB,IAAI,CAACC,UAAU,CAACD,IAAI,CAACE,GAAG,EAAEF,IAAI,CAAC;EAC1D,OAAOd,QAAQ,CAACG,IAAI;AACtB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}