{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { load, login, logout, save } from \"./actions\";\n\n// Create slice\nconst slice = createSlice({\n  name: \"user\",\n  initialState: {\n    isLoading: false,\n    error: null,\n    user: null\n  },\n  reducers: {\n    changeCartProductQty(state, action) {\n      // Get action payload\n      const product = action.payload.product;\n      const qty = action.payload.qty;\n\n      // Get cart\n      const user = JSON.parse(JSON.stringify(state.user));\n      console.log(user);\n      // const cart = user.cart;\n\n      // // Find product in current cart\n      // const existedProd = suser.cart.products.find(prod=>prod._id===product._id)\n    }\n  },\n\n  extraReducers: {\n    // Login action\n    [login.pending]: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [login.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      alert(action.payload.message);\n    },\n    [login.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n    },\n    // Logout action\n    [logout.pending]: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [logout.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.user = null;\n      alert(action.payload.message);\n    },\n    [logout.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n    },\n    // Load current user\n    [load.pending]: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [load.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n    },\n    [load.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n    },\n    // Save user\n    [save.pending]: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    [save.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n    },\n    [save.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n    }\n  }\n});\nexport const userActions = {\n  ...slice.actions,\n  login,\n  logout,\n  load,\n  save\n};\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","load","login","logout","save","slice","name","initialState","isLoading","error","user","reducers","changeCartProductQty","state","action","product","payload","qty","JSON","parse","stringify","console","log","extraReducers","pending","fulfilled","alert","message","rejected","userActions","actions","reducer"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/ClientApp/src/store/user/reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { load, login, logout, save } from \"./actions\";\r\n\r\n// Create slice\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    isLoading: false,\r\n    error: null,\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    changeCartProductQty(state, action) {\r\n      // Get action payload\r\n      const product = action.payload.product;\r\n      const qty = action.payload.qty;\r\n\r\n      // Get cart\r\n      const user = JSON.parse(JSON.stringify(state.user));\r\n      console.log(user);\r\n      // const cart = user.cart;\r\n\r\n      // // Find product in current cart\r\n      // const existedProd = suser.cart.products.find(prod=>prod._id===product._id)\r\n    },\r\n  },\r\n  extraReducers: {\r\n    // Login action\r\n    [login.pending]: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [login.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n      alert(action.payload.message);\r\n    },\r\n    [login.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload.error;\r\n    },\r\n    // Logout action\r\n    [logout.pending]: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [logout.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = null;\r\n      alert(action.payload.message);\r\n    },\r\n    [logout.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload.error;\r\n    },\r\n    // Load current user\r\n    [load.pending]: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [load.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n    },\r\n    [load.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload.error;\r\n    },\r\n    // Save user\r\n    [save.pending]: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    [save.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload.user;\r\n    },\r\n    [save.rejected]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload.error;\r\n    },\r\n  },\r\n});\r\n\r\nexport const userActions = { ...slice.actions, login, logout, load, save };\r\nexport default slice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}