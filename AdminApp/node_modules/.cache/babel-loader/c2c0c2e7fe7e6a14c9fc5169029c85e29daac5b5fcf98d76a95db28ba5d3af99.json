{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\NJS301x_1.0-A_VN\\\\AdminApp\\\\src\\\\pages\\\\EditProduct.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport DataTable from \"react-data-table-component\";\nimport Card from \"../components/UI/Card\";\nimport api, { call } from \"../api/api\";\nimport { toStandard, toUpperFirstCase } from \"../utils/string\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProduct = () => {\n  _s();\n  const history = useHistory();\n  // Get search params\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const mode = searchParams.get(\"mode\");\n  const productId = searchParams.get(\"productId\");\n\n  // Table data state\n  const [fullData, setFullData] = useState([]);\n  const [data, setData] = useState([]);\n  const [ipSearch, setIpSearch] = useState(\"\");\n\n  // Get orders data\n  useEffect(() => {\n    call(api.product.getAll(), resData => {\n      setFullData(resData.items);\n      setData(resData.items);\n    });\n  }, []);\n\n  // Filter data on search change\n  useEffect(() => {\n    const tokens = toStandard(ipSearch).split(\" \");\n    const filtered = fullData.filter(prod => tokens.every(tok => toStandard(prod.name).includes(tok)));\n    setData(filtered);\n  }, [fullData, ipSearch]);\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-product px-3 py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: mode === \"add\" ? \"Add new product\" : \"Update product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mt-4 p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"ipName\",\n            children: \"Product name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"ipName\",\n            placeholder: \"Enter the product name . . .\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProduct, \"tTd3mbkUXD6XSmjaUn1Ty4JS4ZI=\", false, function () {\n  return [useHistory, useLocation];\n});\n_c = EditProduct;\nexport default EditProduct;\nvar _c;\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"names":["useEffect","useState","useHistory","useLocation","DataTable","Card","api","call","toStandard","toUpperFirstCase","jsxDEV","_jsxDEV","EditProduct","_s","history","location","searchParams","URLSearchParams","search","mode","get","productId","fullData","setFullData","data","setData","ipSearch","setIpSearch","product","getAll","resData","items","tokens","split","filtered","filter","prod","every","tok","name","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","placeholder","_c","$RefreshReg$"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/AdminApp/src/pages/EditProduct.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Card from \"../components/UI/Card\";\r\nimport api, { call } from \"../api/api\";\r\nimport { toStandard, toUpperFirstCase } from \"../utils/string\";\r\n\r\nconst EditProduct = () => {\r\n  const history = useHistory();\r\n  // Get search params\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const mode = searchParams.get(\"mode\");\r\n  const productId = searchParams.get(\"productId\");\r\n\r\n  // Table data state\r\n  const [fullData, setFullData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [ipSearch, setIpSearch] = useState(\"\");\r\n\r\n  // Get orders data\r\n  useEffect(() => {\r\n    call(api.product.getAll(), (resData) => {\r\n      setFullData(resData.items);\r\n      setData(resData.items);\r\n    });\r\n  }, []);\r\n\r\n  // Filter data on search change\r\n  useEffect(() => {\r\n    const tokens = toStandard(ipSearch).split(\" \");\r\n    const filtered = fullData.filter((prod) => tokens.every((tok) => toStandard(prod.name).includes(tok)));\r\n    setData(filtered);\r\n  }, [fullData, ipSearch]);\r\n\r\n  // Render component\r\n  return (\r\n    <div className=\"edit-product px-3 py-5\">\r\n      <h5>{mode === \"add\" ? \"Add new product\" : \"Update product\"}</h5>\r\n      <Card className=\"mt-4 p-3\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label for=\"ipName\">Product name</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"ipName\" placeholder=\"Enter the product name . . .\" />\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,EAAEC,WAAW,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,GAAG,IAAIC,IAAI,QAAQ,YAAY;AACtC,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,OAAO,GAAGZ,UAAU,EAAE;EAC5B;EACA,MAAMa,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAMa,YAAY,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACzD,MAAMC,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC;EACrC,MAAMC,SAAS,GAAGL,YAAY,CAACI,GAAG,CAAC,WAAW,CAAC;;EAE/C;EACA,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACdO,IAAI,CAACD,GAAG,CAACsB,OAAO,CAACC,MAAM,EAAE,EAAGC,OAAO,IAAK;MACtCP,WAAW,CAACO,OAAO,CAACC,KAAK,CAAC;MAC1BN,OAAO,CAACK,OAAO,CAACC,KAAK,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/B,SAAS,CAAC,MAAM;IACd,MAAMgC,MAAM,GAAGxB,UAAU,CAACkB,QAAQ,CAAC,CAACO,KAAK,CAAC,GAAG,CAAC;IAC9C,MAAMC,QAAQ,GAAGZ,QAAQ,CAACa,MAAM,CAAEC,IAAI,IAAKJ,MAAM,CAACK,KAAK,CAAEC,GAAG,IAAK9B,UAAU,CAAC4B,IAAI,CAACG,IAAI,CAAC,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC;IACtGb,OAAO,CAACS,QAAQ,CAAC;EACnB,CAAC,EAAE,CAACZ,QAAQ,EAAEI,QAAQ,CAAC,CAAC;;EAExB;EACA,oBACEf,OAAA;IAAK8B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC/B,OAAA;MAAA+B,QAAA,EAAKvB,IAAI,KAAK,KAAK,GAAG,iBAAiB,GAAG;IAAgB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChEnC,OAAA,CAACN,IAAI;MAACoC,SAAS,EAAC,UAAU;MAAAC,QAAA,eACxB/B,OAAA;QAAA+B,QAAA,eACE/B,OAAA;UAAK8B,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB/B,OAAA;YAAOoC,GAAG,EAAC,QAAQ;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACxCnC,OAAA;YAAOqC,IAAI,EAAC,MAAM;YAACP,SAAS,EAAC,cAAc;YAACQ,EAAE,EAAC,QAAQ;YAACC,WAAW,EAAC;UAA8B;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACjG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAACjC,EAAA,CA1CID,WAAW;EAAA,QACCV,UAAU,EAETC,WAAW;AAAA;AAAAgD,EAAA,GAHxBvC,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}