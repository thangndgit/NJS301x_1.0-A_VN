{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\NJS301x_1.0-A_VN\\\\AdminApp\\\\src\\\\components\\\\ChatScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { FaPaperPlane } from \"react-icons/fa\";\nimport { useSelector } from \"react-redux\";\nimport admin from \"../assets/images/admin_avt.jpg\";\nimport useSocket from \"../hooks/useSocket\";\nimport { toUpperFirstCase } from \"../utils/string\";\nimport \"./ChatScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatScreen = _ref => {\n  _s();\n  let {\n    room\n  } = _ref;\n  // Chat state\n  const [messages, setMessages] = useState(room.messages);\n  const [message, setMessage] = useState(\"\");\n\n  // Ref of end message\n  const refChatEnd = useRef();\n\n  // Init socket\n  const user = useSelector(state => state.user.user);\n  const socket = useSocket(room._id, user.role);\n\n  // Set up listener for socket\n  useEffect(() => {\n    if (!socket) return;\n    // Handle when receive new message\n    socket.on(\"server send message\", newMsg => {\n      if (newMsg.from !== \"customer\") return;\n      setMessages([...messages, newMsg]);\n    });\n  }, [messages, socket]);\n\n  // Handle send message\n  const handleSendMessage = e => {\n    // Prevent page from reloading\n    e.preventDefault();\n    if (!socket) return;\n    const msg = {\n      from: user.role,\n      message\n    };\n    // Send message\n    socket.emit(\"client send message\", message);\n    setMessages([...messages, msg]);\n    setMessage(\"\");\n  };\n  useEffect(() => refChatEnd.current.scrollIntoView({\n    behavior: \"smooth\"\n  }), [messages]);\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen__body\",\n      children: [messages.map((msg, i) => {\n        if (msg.from !== \"customer\") return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-message\",\n          children: msg.message\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: admin,\n            alt: \"admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [toUpperFirstCase(msg.from), \": \", msg.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: refChatEnd,\n        onScroll: e => alert(\"dme\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-screen__footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: admin,\n        alt: \"admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Enter Message!\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaPaperPlane, {\n          onClick: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatScreen, \"6ydaAxzez1Zqw1/kGfWKY5G7dWc=\", false, function () {\n  return [useSelector, useSocket];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["useEffect","useRef","useState","FaPaperPlane","useSelector","admin","useSocket","toUpperFirstCase","jsxDEV","_jsxDEV","ChatScreen","_ref","_s","room","messages","setMessages","message","setMessage","refChatEnd","user","state","socket","_id","role","on","newMsg","from","handleSendMessage","e","preventDefault","msg","emit","current","scrollIntoView","behavior","className","children","map","i","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","onScroll","alert","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/GitHub/NJS301x_1.0-A_VN/AdminApp/src/components/ChatScreen.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { FaPaperPlane } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport admin from \"../assets/images/admin_avt.jpg\";\r\nimport useSocket from \"../hooks/useSocket\";\r\nimport { toUpperFirstCase } from \"../utils/string\";\r\nimport \"./ChatScreen.css\";\r\n\r\nconst ChatScreen = ({ room }) => {\r\n  // Chat state\r\n  const [messages, setMessages] = useState(room.messages);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Ref of end message\r\n  const refChatEnd = useRef();\r\n\r\n  // Init socket\r\n  const user = useSelector((state) => state.user.user);\r\n  const socket = useSocket(room._id, user.role);\r\n\r\n  // Set up listener for socket\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    // Handle when receive new message\r\n    socket.on(\"server send message\", (newMsg) => {\r\n      if (newMsg.from !== \"customer\") return;\r\n      setMessages([...messages, newMsg]);\r\n    });\r\n  }, [messages, socket]);\r\n\r\n  // Handle send message\r\n  const handleSendMessage = (e) => {\r\n    // Prevent page from reloading\r\n    e.preventDefault();\r\n    if (!socket) return;\r\n    const msg = {\r\n      from: user.role,\r\n      message,\r\n    };\r\n    // Send message\r\n    socket.emit(\"client send message\", message);\r\n    setMessages([...messages, msg]);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => refChatEnd.current.scrollIntoView({ behavior: \"smooth\" }), [messages]);\r\n\r\n  // Render component\r\n  return (\r\n    <div className=\"chat-screen\">\r\n      <div className=\"chat-screen__body\">\r\n        {messages.map((msg, i) => {\r\n          if (msg.from !== \"customer\")\r\n            return (\r\n              <div className=\"user-message\" key={i}>\r\n                {msg.message}\r\n              </div>\r\n            );\r\n          return (\r\n            <div className=\"admin-message\" key={i}>\r\n              <img src={admin} alt=\"admin\" />\r\n              <div>\r\n                {toUpperFirstCase(msg.from)}: {msg.message}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div ref={refChatEnd} onScroll={(e) => alert(\"dme\")}></div>\r\n      </div>\r\n      <div className=\"chat-screen__footer\">\r\n        <img src={admin} alt=\"admin\" />\r\n        <form onSubmit={handleSendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter Message!\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            required\r\n          />\r\n          <FaPaperPlane onClick={handleSendMessage} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}